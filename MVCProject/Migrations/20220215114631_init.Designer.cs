// <auto-generated />
using MVCProject.DataModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVCProject.Migrations
{
    [DbContext(typeof(PersonContext))]
    [Migration("20220215114631_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVCProject.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Rottne",
                            Name = "Pölen",
                            PhoneNumber = "043016624"
                        },
                        new
                        {
                            Id = 2,
                            City = "Borås",
                            Name = "TeKå",
                            PhoneNumber = "0721453456"
                        },
                        new
                        {
                            Id = 3,
                            City = "Rotterdam",
                            Name = "Koma",
                            PhoneNumber = "0771242424"
                        },
                        new
                        {
                            Id = 4,
                            City = "Helsinki",
                            Name = "Greven",
                            PhoneNumber = "031184698"
                        },
                        new
                        {
                            Id = 5,
                            City = "Sverdlovsk",
                            Name = "Turbo",
                            PhoneNumber = "0443346723"
                        },
                        new
                        {
                            Id = 6,
                            City = "Skövde",
                            Name = "Stekarn",
                            PhoneNumber = "0543768798"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
